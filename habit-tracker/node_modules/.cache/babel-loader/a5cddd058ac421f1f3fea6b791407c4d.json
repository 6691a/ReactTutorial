{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\97200\\\\Desktop\\\\ReactTutorial\\\\habit-tracker\\\\src\\\\app.jsx\";\nimport React, { Component } from 'react';\nimport './app.css';\nimport Habits from './componets/habits';\nimport Navbar from './componets/navbar';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [//고유한 키가 필요함\n      //자식 컴포넌트가 존재 시 키를 요구 함\n      //아이디를 통해 랜더링 시 효율적으로 판단 함\n      {\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Runing',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const newHabits = this.state.habits.map(item => {\n        if (item.id == habit.id) {\n          return { ...habit,\n            count: habit.count + 1\n          };\n        }\n\n        return item;\n      }); // const newHabits = [...this.state.habits];\n      // const index = newHabits.indexOf(habit);\n      // newHabits[index].count++;\n      // console.log(`기존 state/habites : ${this.state.habits[index].count}`);\n      // console.log(`복사한 habites : ${newHabits[index].count}`);\n\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleDecrement = habit => {\n      const newHabits = this.state.habits.map(item => {\n        if (item.id == habit.id) {\n          const count = habit.count - 1;\n          return { ...habit,\n            count: count < 0 ? 0 : count\n          };\n        }\n\n        return item;\n      }); // const newHabits = [...this.state.habits];\n      // const index = newHabits.indexOf(habit);\n      // const count = newHabits[index].count-1;\n\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const newHabits = [...this.state.habits];\n      const index = newHabits.indexOf(habit);\n      newHabits.splice(index, 1); // const newHabits = this.state.habits.filter(item => item.id !== habit.id);\n\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleAdd = name => {\n      const newHabits = [...this.state.habits, {\n        id: Date.now(),\n        name: name,\n        count: 0\n      }];\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleRest = () => {\n      const newHabits = [...this.state.habits];\n      newHabits.map(habit => {\n        habit.count = 0;\n      }); // const newHabits = this.state.habits.map(habit => {\n      //   habit.count = 0;\n      //   return habit;\n      // });\n\n      this.setState({\n        habits: newHabits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        totalCount: this.state.habits.filter(item => item.count > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Habits, {\n        habits: this.state.habits,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete,\n        onAdd: this.handleAdd,\n        onReset: this.handleRest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/97200/Desktop/ReactTutorial/habit-tracker/src/app.jsx"],"names":["React","Component","Habits","Navbar","App","state","habits","id","name","count","handleIncrement","habit","newHabits","map","item","setState","handleDecrement","handleDelete","index","indexOf","splice","handleAdd","Date","now","handleRest","render","filter","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './app.css';\r\nimport Habits from './componets/habits';\r\nimport Navbar from './componets/navbar';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    habits: [\r\n        //고유한 키가 필요함\r\n        //자식 컴포넌트가 존재 시 키를 요구 함\r\n        //아이디를 통해 랜더링 시 효율적으로 판단 함\r\n        {id: 1, name: 'Reading',count:0},\r\n        {id: 2, name: 'Runing',count:0},\r\n        {id: 3, name: 'Coding',count:0},\r\n    ]\r\n  }\r\n\r\n  handleIncrement = (habit)=>{\r\n    const newHabits = this.state.habits.map(item => {\r\n      if(item.id == habit.id) {\r\n        return {...habit, count: habit.count +1}\r\n      }\r\n      return item\r\n    })\r\n    // const newHabits = [...this.state.habits];\r\n    // const index = newHabits.indexOf(habit);\r\n    // newHabits[index].count++;\r\n    // console.log(`기존 state/habites : ${this.state.habits[index].count}`);\r\n    // console.log(`복사한 habites : ${newHabits[index].count}`);\r\n\r\n    this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleDecrement = (habit)=>{\r\n    const newHabits = this.state.habits.map(item =>{\r\n      if(item.id == habit.id) {\r\n        const count = habit.count - 1;\r\n        return {...habit, count: count < 0 ? 0 : count};\r\n      }\r\n      return item\r\n    })\r\n      // const newHabits = [...this.state.habits];\r\n      // const index = newHabits.indexOf(habit);\r\n      // const count = newHabits[index].count-1;\r\n      this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleDelete = (habit)=>{\r\n      const newHabits = [...this.state.habits];\r\n      const index = newHabits.indexOf(habit);\r\n      newHabits.splice(index,1);\r\n\r\n\r\n      // const newHabits = this.state.habits.filter(item => item.id !== habit.id);\r\n      this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleAdd = (name) => {\r\n    const newHabits = [...this.state.habits, {id: Date.now(), name : name, count: 0}];\r\n    this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleRest = () => {\r\n    const newHabits = [...this.state.habits];\r\n    newHabits.map(habit => {\r\n      habit.count = 0;\r\n    })\r\n    // const newHabits = this.state.habits.map(habit => {\r\n    //   habit.count = 0;\r\n    //   return habit;\r\n    // });\r\n\r\n    this.setState({habits : newHabits});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Navbar\r\n        totalCount = {this.state.habits.filter(item => item.count > 0).length}\r\n      />\r\n      <Habits \r\n        habits={this.state.habits}  \r\n        onIncrement = {this.handleIncrement}\r\n        onDecrement = {this.handleDecrement}\r\n        onDelete = {this.handleDelete}\r\n        onAdd = {this.handleAdd}\r\n        onReset = {this.handleRest}\r\n      />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}