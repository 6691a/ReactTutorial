{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\97200\\\\Desktop\\\\React\\\\habit-tracker\\\\src\\\\app.jsx\";\nimport './app.css';\nimport Habits from './componets/habits';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      habits: [//고유한 키가 필요함\n      //자식 컴포넌트가 존재 시 키를 요구 함\n      //아이디를 통해 랜더링 시 효율적으로 판단 함\n      {\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Runing',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const newHabits = [...this.state.habits];\n      const index = newHabits.indexOf(habit);\n      newHabits[index].count++;\n      console.log(`기존 state/habites : ${this.state.habits[index].count}`);\n      console.log(`복사한 habites : ${newHabits[index].count}`);\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleDecrement = habit => {\n      const newHabits = [...this.state.habits];\n      const index = newHabits.indexOf(habit);\n      const count = newHabits[index].count - 1;\n      newHabits[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits: newHabits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const newHabits = [...this.state.habits];\n      const index = newHabits.indexOf(habit);\n      newHabits.splice(index, 1); // const newHabits = this.state.habits.filter(item => item.id !== habit.id);\n\n      this.setState({\n        habits: newHabits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Habits, {\n      habits: this.state.habits,\n      onincrement: this.handleIncrement,\n      onDecrement: this.handleDecrement,\n      onDelete: this.handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/97200/Desktop/React/habit-tracker/src/app.jsx"],"names":["Habits","React","Component","App","state","habits","id","name","count","handleIncrement","habit","newHabits","index","indexOf","console","log","setState","handleDecrement","handleDelete","splice","render"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE,CACJ;AACA;AACA;AACA;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,SAAd;AAAwBC,QAAAA,KAAK,EAAC;AAA9B,OAJI,EAKJ;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,QAAd;AAAuBC,QAAAA,KAAK,EAAC;AAA7B,OALI,EAMJ;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,QAAd;AAAuBC,QAAAA,KAAK,EAAC;AAA7B,OANI;AADF,KADkB;;AAAA,SAY1BC,eAZ0B,GAYPC,KAAD,IAAS;AACzB,YAAMC,SAAS,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,MAAf,CAAlB;AACA,YAAMO,KAAK,GAAGD,SAAS,CAACE,OAAV,CAAkBH,KAAlB,CAAd;AACAC,MAAAA,SAAS,CAACC,KAAD,CAAT,CAAiBJ,KAAjB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqB,KAAKX,KAAL,CAAWC,MAAX,CAAkBO,KAAlB,EAAyBJ,KAAM,EAAjE;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBJ,SAAS,CAACC,KAAD,CAAT,CAAiBJ,KAAM,EAApD;AAEA,WAAKQ,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAGM;AAAV,OAAd;AACD,KApByB;;AAAA,SAsB1BM,eAtB0B,GAsBPP,KAAD,IAAS;AACvB,YAAMC,SAAS,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,MAAf,CAAlB;AACA,YAAMO,KAAK,GAAGD,SAAS,CAACE,OAAV,CAAkBH,KAAlB,CAAd;AACA,YAAMF,KAAK,GAAGG,SAAS,CAACC,KAAD,CAAT,CAAiBJ,KAAjB,GAAuB,CAArC;AACAG,MAAAA,SAAS,CAACC,KAAD,CAAT,CAAiBJ,KAAjB,GAAyBA,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgBA,KAAzC;AACA,WAAKQ,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAGM;AAAV,OAAd;AACH,KA5ByB;;AAAA,SA8B1BO,YA9B0B,GA8BVR,KAAD,IAAS;AACpB,YAAMC,SAAS,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,MAAf,CAAlB;AACA,YAAMO,KAAK,GAAGD,SAAS,CAACE,OAAV,CAAkBH,KAAlB,CAAd;AACAC,MAAAA,SAAS,CAACQ,MAAV,CAAiBP,KAAjB,EAAuB,CAAvB,EAHoB,CAMpB;;AACA,WAAKI,QAAL,CAAc;AAACX,QAAAA,MAAM,EAAGM;AAAV,OAAd;AACH,KAtCyB;AAAA;;AAwC1BS,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,KAAKhB,KAAL,CAAWC,MADrB;AAEE,MAAA,WAAW,EAAI,KAAKI,eAFtB;AAGE,MAAA,WAAW,EAAI,KAAKQ,eAHtB;AAIE,MAAA,QAAQ,EAAI,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAjDyB;;AAoD5B,eAAef,GAAf","sourcesContent":["import './app.css';\r\nimport Habits from './componets/habits';\r\nimport React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    habits: [\r\n        //고유한 키가 필요함\r\n        //자식 컴포넌트가 존재 시 키를 요구 함\r\n        //아이디를 통해 랜더링 시 효율적으로 판단 함\r\n        {id: 1, name: 'Reading',count:0},\r\n        {id: 2, name: 'Runing',count:0},\r\n        {id: 3, name: 'Coding',count:0},\r\n    ]\r\n  }\r\n\r\n  handleIncrement = (habit)=>{\r\n    const newHabits = [...this.state.habits];\r\n    const index = newHabits.indexOf(habit);\r\n    newHabits[index].count++;\r\n    console.log(`기존 state/habites : ${this.state.habits[index].count}`);\r\n    console.log(`복사한 habites : ${newHabits[index].count}`);\r\n\r\n    this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleDecrement = (habit)=>{\r\n      const newHabits = [...this.state.habits];\r\n      const index = newHabits.indexOf(habit);\r\n      const count = newHabits[index].count-1;\r\n      newHabits[index].count = count < 0 ? 0 : count;\r\n      this.setState({habits : newHabits});\r\n  }\r\n\r\n  handleDelete = (habit)=>{\r\n      const newHabits = [...this.state.habits];\r\n      const index = newHabits.indexOf(habit);\r\n      newHabits.splice(index,1);\r\n\r\n\r\n      // const newHabits = this.state.habits.filter(item => item.id !== habit.id);\r\n      this.setState({habits : newHabits});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Habits \r\n        habits={this.state.habits}  \r\n        onincrement = {this.handleIncrement}\r\n        onDecrement = {this.handleDecrement}\r\n        onDelete = {this.handleDelete}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}